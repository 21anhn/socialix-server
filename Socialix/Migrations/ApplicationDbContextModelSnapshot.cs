// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Socialix.Data;

#nullable disable

namespace Socialix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Socialix.Models.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFCAB69B4ECA");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Socialix.Models.Follower", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("FollowerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FollowerId")
                        .HasName("PK__Follower__E85940190F0BCE10");

                    b.HasIndex("FollowerUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("Socialix.Models.Friendship", b =>
                {
                    b.Property<Guid>("FriendshipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId2")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FriendshipId")
                        .HasName("PK__Friendsh__4D531A54B56010B0");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("Socialix.Models.Like", b =>
                {
                    b.Property<Guid>("LikeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LikeId")
                        .HasName("PK__Likes__A2922C1422E0ACE4");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Socialix.Models.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__C87C0C9C04C857C8");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Socialix.Models.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E126EE00242");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Socialix.Models.Post", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostId")
                        .HasName("PK__Posts__AA1260185F490794");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Socialix.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarPhotoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverPhotoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("CreatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<decimal?>("DoB")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LastLogin")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<decimal?>("UpdatedAt")
                        .HasColumnType("decimal(8, 0)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Users__1788CC4C44F7E0F3");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053488408B0B")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Socialix.Models.Comment", b =>
                {
                    b.HasOne("Socialix.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK__Comments__PostId__6D9742D9");

                    b.HasOne("Socialix.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comments__UserId__6E8B6712");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Socialix.Models.Follower", b =>
                {
                    b.HasOne("Socialix.Models.User", "FollowerUser")
                        .WithMany("FollowerFollowerUsers")
                        .HasForeignKey("FollowerUserId")
                        .HasConstraintName("FK__Followers__Follo__7EC1CEDB");

                    b.HasOne("Socialix.Models.User", "User")
                        .WithMany("FollowerUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Followers__UserI__7DCDAAA2");

                    b.Navigation("FollowerUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Socialix.Models.Friendship", b =>
                {
                    b.HasOne("Socialix.Models.User", "UserId1Navigation")
                        .WithMany("FriendshipUserId1Navigations")
                        .HasForeignKey("UserId1")
                        .HasConstraintName("FK__Friendshi__UserI__762C88DA");

                    b.HasOne("Socialix.Models.User", "UserId2Navigation")
                        .WithMany("FriendshipUserId2Navigations")
                        .HasForeignKey("UserId2")
                        .HasConstraintName("FK__Friendshi__UserI__7720AD13");

                    b.Navigation("UserId1Navigation");

                    b.Navigation("UserId2Navigation");
                });

            modelBuilder.Entity("Socialix.Models.Like", b =>
                {
                    b.HasOne("Socialix.Models.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK__Likes__CommentId__73501C2F");

                    b.HasOne("Socialix.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK__Likes__PostId__725BF7F6");

                    b.HasOne("Socialix.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Likes__UserId__7167D3BD");

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Socialix.Models.Message", b =>
                {
                    b.HasOne("Socialix.Models.User", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Messages__Receiv__7AF13DF7");

                    b.HasOne("Socialix.Models.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Messages__Sender__79FD19BE");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Socialix.Models.Notification", b =>
                {
                    b.HasOne("Socialix.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__019E3B86");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Socialix.Models.Post", b =>
                {
                    b.HasOne("Socialix.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Posts__UserId__6ABAD62E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Socialix.Models.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Socialix.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Socialix.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FollowerFollowerUsers");

                    b.Navigation("FollowerUsers");

                    b.Navigation("FriendshipUserId1Navigations");

                    b.Navigation("FriendshipUserId2Navigations");

                    b.Navigation("Likes");

                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
